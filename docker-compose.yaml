version: "3.7"
services:
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:amd64-latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/sonarr/config:/config
      - /media:/media
    restart: always
    env_file:
      - sonarr.env
      - common.env

  radarr:
    container_name: radarr
    image: linuxserver/radarr:amd64-latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/radarr/config:/config
      - /media:/media
    restart: always
    env_file:
      - radarr.env
      - common.env

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:amd64-latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/bazarr/config:/config
      - /media:/media
    restart: always
    env_file:
      - bazarr.env
      - common.env

  emby:
    container_name: emby
    image: emby/embyserver:latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/emby/config:/config
      - /media:/media
    restart: always
    env_file:
      - common.env
      - emby.env

  jackett:
    container_name: jackett
    image: linuxserver/jackett:amd64-latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/jackett/config:/config
      - /srv/transmission/watch:/downloads
    restart: always
    env_file:
      - jackett.env
      - common.env

  transmission:
    image: linuxserver/transmission:amd64-latest
    container_name: transmission
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/transmission/config:/config
      - /srv/transmission/watch:/watch
      - /media/downloads:/downloads
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: always
    env_file:
      - transmission.env
      - common.env

  netdata:
    container_name: netdata
    image: netdata/netdata:latest
    hostname: ubuntu.dlink
    cap_add:
      - SYS_PTRACE
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /srv/netdata/etc/netdata:/etc/netdata
      - /srv/netdata/var/lib/netdata:/var/lib/netdata
      - /srv/netdata/var/cache/netdata:/var/cache/netdata
    security_opt:
      - apparmor:unconfined
    restart: always
    env_file:
      - netdata.env

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /srv/nginx/config:/etc/nginx/conf.d
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    ports:
      - 80:80
      - 443:443
    env_file:
      - nginx.env

  nginx-proxy-letsencrypt:
    container_name: nginx-proxy-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    env_file:
      - letsencrypt.env

volumes:
  certs:
  vhost:
  html:
