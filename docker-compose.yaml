version: "3.7"
services:
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:amd64-latest
    volumes:
      - /srv/sonarr/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`${SONARR_HOST}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=gilbn/theme.park:sonarr

  radarr:
    container_name: radarr
    image: linuxserver/radarr:amd64-latest
    volumes:
      - /srv/radarr/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`${RADARR_HOST}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=gilbn/theme.park:radarr

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:amd64-latest
    volumes:
      - /srv/bazarr/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`${BAZARR_HOST}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=gilbn/theme.park:bazarr

  emby:
    container_name: emby
    image: emby/embyserver:latest
    volumes:
      - /srv/emby/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.emby.rule=Host(`${EMBY_HOST}`)"
      - "traefik.http.routers.emby.entrypoints=websecure"
      - "traefik.http.routers.emby.tls.certresolver=letsencrypt"
      - "traefik.http.services.emby.loadbalancer.server.port=8096"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw

  jackett:
    container_name: jackett
    image: linuxserver/jackett:amd64-latest
    volumes:
      - /srv/jackett/config:/config
      - /srv/transmission/watch:/downloads
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`${JACKETT_HOST}`)"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=letsencrypt"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=gilbn/theme.park:jackett

  transmission:
    image: linuxserver/transmission:amd64-latest
    container_name: transmission
    volumes:
      - /srv/transmission/config:/config
      - /srv/transmission/watch:/watch
      - /media/downloads:/downloads
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`${TRANSMISSION_HOST}`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.http.middlewares.transmission.basicauth.users=${TRANSMISSION_USER}:${TRANSMISSION_PASS}"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=gilbn/theme.park:transmission
      - TRANSMISSION_WEB_HOME=/combustion-release/

  agent:
    container_name: portainer-agent
    image: portainer/agent
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes

  portainer:
    container_name: portainer-server
    image: portainer/portainer-ce
    command: -H tcp://agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOST}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  duplicati:
    container_name: duplicati
    image: linuxserver/duplicati:amd64-latest
    volumes:
      - /srv/duplicati/config:/config
      - /srv:/backups
      - /srv/duplicati/source:/source
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.duplicati.rule=Host(`${DUPLICATI_HOST}`)"
      - "traefik.http.routers.duplicati.entrypoints=websecure"
      - "traefik.http.routers.duplicati.tls.certresolver=letsencrypt"
      - "traefik.http.services.duplicati.loadbalancer.server.port=8200"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      - TZ=Europe/Warsaw
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 5 * * *
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_HOOK_URL}
      - WATCHTOWER_NOTIFICATIONS_LEVEL=warn
      - WATCHTOWER_NO_STARTUP_MESSAGE=true

  logrotate:
    container_name: logrotate
    image: blacklabelops/logrotate:latest
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/log/docker:/var/log/docker
    restart: always
    environment: 
      - TZ=Europe/Warsaw
      - "LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker"
      - LOGROTATE_SIZE=5M

  bitwarden-rs:
    container_name: bitwarden-rs
    image: bitwardenrs/server:latest
    volumes:
      - /srv/bitwarden/:/data/
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bitwarden.rule=Host(`${BITWARDEN_HOST}`)"
      - "traefik.http.routers.bitwarden.entrypoints=websecure"
      - "traefik.http.routers.bitwarden.tls.certresolver=letsencrypt"
      - "traefik.http.services.bitwarden.loadbalancer.server.port=80"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=false

  traefik:
    container_name: traefik
    image: traefik:latest
    command:
      - "--pilot.token=${TRAEFIK_PILOT_TOKEN}"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=${DEFAULT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.services.api@internal.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Europe/Warsaw
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
      - TRAEFIK_PILOT_TOKEN=${TRAEFIK_PILOT_TOKEN}
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  letsencrypt:
  portainer_data:
