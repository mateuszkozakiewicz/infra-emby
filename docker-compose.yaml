version: "3.7"

services:
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:amd64-latest
    volumes:
      - /srv/sonarr/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`${SONARR_HOST}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.sonarr.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.sonarr.middlewares=traefik-forward-auth"
      - "traefik.http.routers.sonarr-api.rule=Host(`${SONARR_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.sonarr-api.entrypoints=websecure"
      - "traefik.http.routers.sonarr-api.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.sonarr-api.middlewares=traefik-real-ip"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr

  radarr:
    container_name: radarr
    image: linuxserver/radarr:amd64-latest
    volumes:
      - /srv/radarr/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`${RADARR_HOST}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.radarr.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.radarr.middlewares=traefik-forward-auth"
      - "traefik.http.routers.radarr-api.rule=Host(`${RADARR_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.radarr-api.entrypoints=websecure"
      - "traefik.http.routers.radarr-api.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.radarr-api.middlewares=traefik-real-ip"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:amd64-latest
    volumes:
      - /srv/bazarr/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`${BAZARR_HOST}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.bazarr.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.bazarr.middlewares=traefik-forward-auth"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr

  emby:
    container_name: emby
    image: emby/embyserver:latest
    volumes:
      - /srv/emby/config:/config
      - /media:/media
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.emby.rule=Host(`${EMBY_HOST}`)"
      - "traefik.http.routers.emby.entrypoints=websecure"
      - "traefik.http.routers.emby.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.emby.middlewares=traefik-real-ip"
      - "traefik.http.services.emby.loadbalancer.server.port=8096"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:amd64-develop
    volumes:
      - /srv/prowlarr/config:/config
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`${PROWLARR_HOST}`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.prowlarr.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.prowlarr.middlewares=traefik-forward-auth"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr

  transmission:
    image: linuxserver/transmission:amd64-latest
    container_name: transmission
    volumes:
      - /srv/transmission/config:/config
      - /srv/transmission/watch:/watch
      - /media/downloads:/downloads
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`${TRANSMISSION_HOST}`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.transmission.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.transmission.middlewares=traefik-forward-auth"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:transmission
      - TRANSMISSION_WEB_HOME=/combustion-release/

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      - TZ=Europe/Warsaw
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 5 * * *
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_HOOK_URL}
      - WATCHTOWER_NOTIFICATIONS_LEVEL=warn
      - WATCHTOWER_NO_STARTUP_MESSAGE=true

  logrotate:
    container_name: logrotate
    image: blacklabelops/logrotate:latest
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/log/docker:/var/log/docker
      - logrotate_status:/logrotate-status
    restart: always
    environment:
      - TZ=Europe/Warsaw
      - "LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker"
      - LOGROTATE_SIZE=5M

  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    command:
      - "--pilot.token=${TRAEFIK_PILOT_TOKEN}"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--accesslog.format=json"
      - "--accesslog.fields.headers.defaultmode=drop"
      - "--accesslog.fields.headers.names.X-Real-Ip=keep"
      - "--accesslog.fields.defaultmode=drop"
      - "--accesslog.fields.headers.defaultmode=drop"
      - "--accesslog.fields.names.RequestHost=keep"
      - "--accesslog.fields.names.RequestPath=keep"
      - "--accesslog.fields.names.RequestMethod=keep"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file=true"
      - "--providers.file.filename=/etc/traefik/rules.toml"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=${DEFAULT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # - "--experimental.plugins.traefik-real-ip.modulename=github.com/soulbalz/traefik-real-ip"
      # - "--experimental.plugins.traefik-real-ip.version=v1.0.3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.traefik.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.traefik.middlewares=traefik-forward-auth"
      - "traefik.http.services.api@internal.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Europe/Warsaw
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
      - TRAEFIK_PILOT_TOKEN=${TRAEFIK_PILOT_TOKEN}
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./rules.toml:/etc/traefik/rules.toml

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${WHOAMI_HOST}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.whoami.middlewares=traefik-real-ip"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"

  jellyfin:
    image: "jellyfin/jellyfin"
    container_name: jellyfin
    volumes:
      - /srv/jellyfin/config:/config
      - /srv/jellyfin/cache:/cache
      - /media:/media:ro
    group_add:
      - 122
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`${JELLYFIN_HOST}`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.jellyfin.middlewares=traefik-real-ip"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      # - "traefik.http.middlewares.traefik-real-ip.plugin.traefik-real-ip.excludednets=1.1.1.1/24"
    environment:
      - JELLYFIN_PublishedServerUrl=https://${JELLYFIN_HOST}
      - PUID=911
      - UID=911
      - GID=911
      - TZ=Europe/Warsaw
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-forward-auth.rule=Host(`${AUTH_HOST}`)"
      - "traefik.http.routers.traefik-forward-auth.entrypoints=websecure"
      - "traefik.http.routers.traefik-forward-auth.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.traefik-forward-auth.middlewares=traefik-real-ip,traefik-forward-auth"
      - "traefik.http.routers.traefik-forward-auth.middlewares=traefik-forward-auth"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
    environment:
      - PROVIDERS_GOOGLE_CLIENT_ID=${OAUTH2_CLIENT_ID}
      - PROVIDERS_GOOGLE_CLIENT_SECRET=${OAUTH2_CLIENT_SECRET}
      - SECRET=${OAUTH2_COOKIE_SECRET}
      - AUTH_HOST=${AUTH_HOST}
      - COOKIE_DOMAIN=${EMBY_HOST}

  flaresolverr:
    image: "flaresolverr/flaresolverr"
    container_name: flaresolverr
    restart: always
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Warsaw

volumes:
  letsencrypt:
  portainer_data:
  logrotate_status:
